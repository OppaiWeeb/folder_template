#!/bin/bash
##
## EPITECH PROJECT, 2021
## Template folder generator
## Project description:
## folder generator
##

dir=$HOME/.local/share/template_tek/rsrc
pwd=$(pwd)
purple='\033[0;35m'
green='\033[0;32m'

get_name()
{
    echo ${pwd##*/}
}

select_quote()
{
    for ((i = 0; i < $1 ; i++)); do
        read line
    done < $dir/quote.txt
    echo $line
}

gen_c_cpp()
{
    cp $dir/header.c $pwd/$1
    sed -i "s/date/$(date +%Y)/g" $pwd/$1
    sed -i "s/file/$(get_name)/g" $pwd/$1
    nb=$(shuf -i1-35 -n1)
    sed -i "s/quote/$(select_quote $nb)/g" $pwd/$1
}

gen_h()
{
    cp $dir/header.h $pwd/$1
    name=$(get_name)
    name="_${name^^}_H_"
    sed -i "s/date/$(date +%Y)/g" $pwd/$1
    sed -i "s/name/$(get_name)/g" $pwd/$1
    sed -i "s/file/${name}/g" $pwd/$1
    nb=$(shuf -i1-35 -n1)
    sed -i "s/quote/$(select_quote $nb)/g" $pwd/$1
}

create_C_archi()
{
    printf "${purple} [+] create folder\n"
    sleep .2
    mkdir -p $pwd/src $pwd/include $pwd/tests
    printf "${purple} [+] create main.c\n"
    sleep .2
    gen_c_cpp src/main.c
    printf "${purple} [+] create tests/tests_$(get_name).c\n"
    sleep .2
    gen_c_cpp tests/tests_$(get_name).c
    printf "${purple} [+] create makefile\n"
    sleep .2
    # makefile_generator
    printf "${purple} [+] create include/$(get_name).h\n"
    sleep .2
    gen_h include/$(get_name).h
    printf "${purple} [+] create gitignore\n"
    sleep .2
    cat $dir/gitignore | sed "s/name/$(get_name)/g" > $pwd/.gitignore
    printf "${purple} [+] create lib\n"
    sleep .2
    mkdir -p $pwd/lib
    cp -r $dir/../lib/* $pwd/lib/
    cp $pwd/lib/include/* $pwd/include/
    rm -rf $pwd/lib/.git
}

if [[ $1 == "-u" || $1 == "-U" ]]; then
    echo "UPDATE"
    (cd $dir/../ && git fetch && git pull)
    (cd $dir/../lib/ && git fetch && git pull)
    exit 0
fi

select FILE in C CPP PYTHON RUST SH; do
    case $FILE in
        "C") create_C_archi
            break
        ;;
        # "CPP") create_CPP_archi
        #     break
        # ;;
        "PYTHON") echo "Not implemented yet"
            break
        ;;
        "RUST") echo " Not implemented yet"
            break
        ;;
        "SH") echo "Not implement yet"
            break
        ;;
        *) echo "Not implemented yet"
            break
        ;;
    esac
done
printf "${green} folder is ready\n"
